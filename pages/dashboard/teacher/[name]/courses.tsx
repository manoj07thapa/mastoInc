import SidebarLayout from "@/components/dashboard/SidebarLayout";
import { UserContext } from "@/contexts/UserContext";
import { listCourses } from "@/src/graphql/queries";
import { PageWithLayout } from "@/types/types";
import { API } from "aws-amplify";
import Head from "next/head";
import { ReactElement, useCallback, useContext, useEffect, useState } from "react";
import { ListCoursesQuery } from '../../../../types/amplifyCodegen/codegenTypes';
import { deleteCourse } from "@/src/graphql/mutations";
import CourseTable from "@/components/dashboard/tables/CourseTable";


const TeacherCourses: PageWithLayout = ({ }) => {
    const [teacherCourses, setTeacherCourses] = useState<ListCoursesQuery | undefined>(undefined);
    const userContext = useContext(UserContext);


    const fetchTeacherCourses = useCallback(async () => {
        if (userContext?.user) {
            try {
                const filter = {
                    tutor: { eq: userContext?.user?.attributes.name },
                };
                const res = (await API.graphql({
                    query: listCourses,
                    variables: { filter },
                    authMode: "AMAZON_COGNITO_USER_POOLS",
                })) as { data: ListCoursesQuery };
                setTeacherCourses(res.data);
            } catch (error) {
                console.log('Error', error);


            }
        }
    }, [userContext?.user]);

    useEffect(() => {
        fetchTeacherCourses();
    }, [fetchTeacherCourses]);

    const removeCourse = async (id: string) => {
        try {
            await API.graphql({
                query: deleteCourse,
                variables: { input: { id } },
                authMode: "AMAZON_COGNITO_USER_POOLS",
            });
            fetchTeacherCourses();
        } catch (error) {
            console.log('REMOVECOURSEERROR', error);


        }
    };

    return (
        <>
            <Head>
                <title>{`Teacher | Courses`}</title>
                <meta name="description" content="Generated by create next app" />
                <link rel="icon" href="/favicon.ico" />
            </Head>
            <h2>{userContext?.user?.attributes.name} Courses</h2>
            {teacherCourses && <CourseTable teacherCourses={teacherCourses} />}
        </>
    );
}

// binding the page to the sidebatlayout
TeacherCourses.getLayout = function (page: ReactElement) {
    return (
        <SidebarLayout >
            <main>{page}</main>
        </SidebarLayout>
    )
}

export default TeacherCourses;